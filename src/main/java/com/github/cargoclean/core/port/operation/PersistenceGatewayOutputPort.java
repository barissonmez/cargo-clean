package com.github.cargoclean.core.port.operation;

import com.github.cargoclean.core.model.cargo.Cargo;
import com.github.cargoclean.core.model.cargo.TrackingId;
import com.github.cargoclean.core.model.location.Location;
import com.github.cargoclean.core.model.location.UnLocode;

import java.util.List;

public interface PersistenceGatewayOutputPort {

    TrackingId nextTrackingId();

    /**
     * Load all {@code Locations} from the database.
     *
     * @return list of locations
     */
    List<Location> allLocations();

    /**
     * Load {@code Location} with matching {@code unLocode} from the database
     *
     * @param unLocode UN location code
     * @return fully resolved location
     */
    Location obtainLocationByUnLocode(UnLocode unLocode);

    /**
     * Persist {@code Cargo} instance, and return instance with {@code id} generated by the database
     *
     * @param cargoToSave {@code Cargo}
     * @return saved {@code Cargo} instance with loaded relations, will have {@code id} not {@code null}
     */
    Cargo saveCargo(Cargo cargoToSave);

    /**
     * Load {@code Cargo} with matching {@code trackingId} from the database.
     *
     * @param trackingId tracking ID of the cargo
     * @return fully resolved {@code Cargo} instance
     */
    Cargo obtainCargoByTrackingId(TrackingId trackingId);


}
